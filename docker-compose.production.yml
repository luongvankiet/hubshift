services:
  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    depends_on:
      - api-gateway
      - app
    restart: unless-stopped

  # API Gateway
  api-gateway:
    image: ${DOCKER_USERNAME}/api-gateway:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/gateway-health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

  # Auth Service
  auth-service:
    image: ${DOCKER_USERNAME}/auth-service:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

  # User UI
  app:
    image: ${DOCKER_USERNAME}/app:latest
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

  # Admin UI
  # admin-ui:
  #   image: ${DOCKER_USERNAME}/admin-ui:latest
  #   env_file:
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #         cpus: "0.3"

networks:
  default:
    name: hubshift-network
